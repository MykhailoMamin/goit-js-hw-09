{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,qBACpCE,EAAYH,SAASC,cAAc,oBACnCG,EAAcJ,SAASC,cAAc,sBA0B3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAnCPR,EAAKgB,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAIC,iBAOJ,IALA,IAAIV,EAAQW,OAAOhB,EAAWiB,OAC1BC,EAAOF,OAAOf,EAAUgB,OACxBE,EAASH,OAAOd,EAAYe,OAGvBG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAEhCjB,EADWiB,EACaf,GACrBgB,MAAK,SAAAC,G,IAAGC,EAAaD,EAAblB,SAAeoB,EAAQF,EAARjB,MACtBoB,EAAA9B,GAAS+B,OAAOC,QAAQ,qBAA+BC,OAAVL,EAAI,QAAQK,OAAFJ,EAAE,M,IAE1DK,OAAM,SAAAP,G,IAAGC,EAAaD,EAAblB,SAAeoB,EAAQF,EAARjB,MACvBoB,EAAA9B,GAAS+B,OAAOI,QAAQ,oBAA8BF,OAAVL,EAAI,QAAQK,OAAFJ,EAAE,M,IAE5DnB,GAASa,EAEXrB,EAAKkC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector('input[name=delay]');\nconst stepInput = document.querySelector('input[name=step]');\nconst amountInput = document.querySelector('input[name=amount]');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  let delay = Number(delayInput.value);\n  let step = Number(stepInput.value);\n  let amount = Number(amountInput.value);\n  let position = 0;\n\n  for (let i = 1; i <= amount; i += 1) {\n    position = i;\n    createPromise(position, delay)\n      .then(({ position: pos, delay: d }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${pos} in ${d}ms`);\n      })\n      .catch(({ position: pos, delay: d }) => {\n        Notiflix.Notify.failure(`Rejected promise ${pos} in ${d}ms`);\n      });\n    delay += step;\n  }\n  form.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","Number","value","step","amount","i","then","param","pos","d","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.521ad05f.js.map"}